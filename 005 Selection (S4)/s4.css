@import url('https://fonts.googleapis.com/css2?family=Lato&family=Open+Sans&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300&display=swap');

/*General CSS styling for the page*/
body {
	background-color: #99c5b5;
	background-size: cover;
	background-repeat: no-repeat;
}

/*Header CSS starts*/
.header-container {
	width: 100%;
	border-radius: 5px;
	background-color: #124E78;
	display: inline-block;
	position: relative;
}

.header-title {
	padding: 25px;
	color: white;
	font-family: sans-serif;
	font-family: 'Lato', sans-serif;
	font-weight: 100;
	font-size: 200%;
	text-align: center;
	vertical-align: middle;
}

/*Header CSS ends*/

/*Input box style begins*/
.main-box {
	margin: 0 auto;
	border-radius: 6px;
	width: 50%;
	padding: 40px;
	text-align: center;
	background-color: #e6ecf3;
	;
}

.header {
	font-family: 'Open Sans', sans-serif;
	font-size: 1.7rem;
	padding-bottom: 2rem;
}

.form-box input {
	margin: 0 auto;
	padding: 5px;
	width: 20%;
	height: 1.8rem;
	border: dashed 1px;
	border-radius: 4px;
}

button {
	padding: 0.5rem;
	cursor: pointer;
	background: #009090;
	border: none;
	color: white;
	width: 10rem;
	border-radius: 5px;
	transition: all .4s;
}

button:hover {
	background: #24252a;
}

/*Input box style ends*/

/*Magic frog container and output style begins*/

/*The following CSS class is only activated upon the execution of myFunction() which adds a class to the mystery frog div. The following code contains the animations.*/
.shake {
	transition: 2s;
}

.container:hover .shake {
	animation: shake 1s;
	animation-iteration-count: 1;
	opacity: 0;

}

@keyframes shake {
	0% {
		transform: translate(1px, 1px) rotate(0deg);
	}

	5% {
		transform: translate(-1px, -2px) rotate(-1deg);
	}

	10% {
		transform: translate(3px, 2px) rotate(0deg);
	}

	15% {
		transform: translate(1px, -1px) rotate(1deg);
	}

	20% {
		transform: translate(-1px, 2px) rotate(-1deg);
	}

	25% {
		transform: translate(-3px, 1px) rotate(0deg);
	}

	30% {
		transform: translate(3px, 1px) rotate(-1deg);
	}

	35% {
		transform: translate(-1px, -1px) rotate(1deg);
	}

	40% {
		transform: translate(1px, 2px) rotate(0deg);
	}

	45% {
		transform: translate(1px, 1px) rotate(0deg);
	}

	50% {
		transform: translate(-1px, -2px) rotate(-1deg);
	}

	55% {
		transform: translate(-3px, 0px) rotate(1deg);
	}

	60% {
		transform: translate(3px, 2px) rotate(0deg);
	}

	65% {
		transform: translate(1px, -1px) rotate(1deg);
	}

	70% {
		transform: translate(-1px, 2px) rotate(-1deg);
	}

	75% {
		transform: translate(-3px, 1px) rotate(0deg);
	}

	80% {
		transform: translate(3px, 1px) rotate(-1deg);
	}

	85% {
		transform: translate(-1px, -1px) rotate(1deg);
	}

	90% {
		transform: translate(1px, 2px) rotate(0deg);
	}

	95% {
		transform: translate(-1px, 2px) rotate(-1deg);
	}

	99% {
		transform: translate(3px, 1px) rotate(-1deg);
	}
}

#message {
	padding: 0 200px;
	width: 50%;
	text-align: center;
}

/*Animation ends*/
/*Magic box container and leap year output style ends*/

/*Main container handling output is styled*/
.container {
	position: relative;
	width: 50%;
	margin-left: 25%;
	margin-top: 2%;
}

.image {
	display: block;
	width: 60%;
	height: 60%;
	margin: 10px auto;
}

.overlay {
	position: absolute;
	top: 20%;
	bottom: 0;
	left: 0;
	right: 0;
	margin: 0 auto;
	height: 50%;
	width: 60%;
	opacity: 0;
	background: #008CBA;
	transition: 1s ease;
}

/*On hover, the message output is made visible*/
.container:hover .overlay {
	opacity: 1;
}

/*Styling for output text begins*/
.text {
	color: white;
	font-family: 'Poppins', sans-serif;
	font-size: 1.9rem;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	text-align: center;
}

/*Media query adjusts font size*/
@media only screen and (max-width: 1000px) {
	.text {
		font-size: 1rem;
	}
}

/*Style for shake prompt under input button*/
#shake_prompt {
	padding-top: 20px;
	color: #5453a1;
	font-family: sans-serif;
	font-family: 'Lato', sans-serif;
	font-weight: 300;
	font-size: 120%;
	text-align: center;
	vertical-align: middle;
}

/*Styling for output text ends*/
